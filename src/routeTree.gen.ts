/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as MainImport } from './routes/_main'
import { Route as MainIndexImport } from './routes/_main/index'
import { Route as MainPatientlistImport } from './routes/_main/patientlist'
import { Route as MainManageImport } from './routes/_main/manage'
import { Route as MainScansIdImport } from './routes/_main/scans.$id'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  path: '/',
  getParentRoute: () => MainRoute,
} as any)

const MainPatientlistRoute = MainPatientlistImport.update({
  path: '/patientlist',
  getParentRoute: () => MainRoute,
} as any)

const MainManageRoute = MainManageImport.update({
  path: '/manage',
  getParentRoute: () => MainRoute,
} as any)

const MainScansIdRoute = MainScansIdImport.update({
  path: '/scans/$id',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_main/manage': {
      id: '/_main/manage'
      path: '/manage'
      fullPath: '/manage'
      preLoaderRoute: typeof MainManageImport
      parentRoute: typeof MainImport
    }
    '/_main/patientlist': {
      id: '/_main/patientlist'
      path: '/patientlist'
      fullPath: '/patientlist'
      preLoaderRoute: typeof MainPatientlistImport
      parentRoute: typeof MainImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/scans/$id': {
      id: '/_main/scans/$id'
      path: '/scans/$id'
      fullPath: '/scans/$id'
      preLoaderRoute: typeof MainScansIdImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  MainRoute: MainRoute.addChildren({
    MainManageRoute,
    MainPatientlistRoute,
    MainIndexRoute,
    MainScansIdRoute,
  }),
  LoginRoute,
  SignupRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_main",
        "/login",
        "/signup"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/manage",
        "/_main/patientlist",
        "/_main/",
        "/_main/scans/$id"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_main/manage": {
      "filePath": "_main/manage.tsx",
      "parent": "/_main"
    },
    "/_main/patientlist": {
      "filePath": "_main/patientlist.tsx",
      "parent": "/_main"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    },
    "/_main/scans/$id": {
      "filePath": "_main/scans.$id.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
